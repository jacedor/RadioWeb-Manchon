@model RadioWeb.Models.CambioPassword

@{
    Layout = null;
    USUARIO usuario = RadioWeb.Models.Repos.UsuariosRepositorio.Obtener(User.Identity.Name);
}

<!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>RadioWeb 2.0 | Login</title>

    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/font-awesome/css/font-awesome.css" rel="stylesheet">
    <link href="/css/animate.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/custom/passwordValidator.css" rel="stylesheet">

</head>

<body class="gray-bg">
    @{
        var hayLogo = false;
        if (ViewBag.NombreEmpresa != null)
        {
            var imagen = ViewBag.NombreEmpresa.ToString().Replace(" ", "") + ".png";
            var filePath = "~/img/logo-" + imagen;
            if (File.Exists(Server.MapPath(filePath)))
            {
                hayLogo = true;
                <div class="text-center" style="margin-top:30px;">
                    <img alt="image" class="rounded-circle" src="~/img/logo-@imagen">

                </div>
            }
        }

    }

    <div class="middle-box text-center changepasswordscreen animated fadeInDown" style="margin-top:10px;">

        <div>
            <div>

                @if (!hayLogo)
                {
                    <h1 class="logo-name">RW+</h1>
                }


            </div>
            <h3>Bienvenido @usuario.LOGIN</h3>
            <h4>Su contraseña ha caducado. <br />Debe cambiar la contraseña para continuar.</h4>

            @*<form id="form1" class="m-t" method="post" action="">

            <p class="help-block text-danger">@ViewBag.Error</p>

            <div class="form-group oldpassword">
                @Html.LabelFor(model => model.PasswordOld, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.PasswordOld)
                @Html.ValidationMessageFor(model => model.PasswordOld, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="password" id="Password1" name="Password1" class="form-control" placeholder="Su nueva contraseña" required="">
            </div>

            <div class="form-group">
                <input type="password" id="Password2" name="Password2" class="form-control" placeholder="Repita su nueva contraseña" required="">
            </div>

            <button id="butonSend" type="submit" class="btn btn-primary block full-width m-b">Cambiar Contraseña</button>
        </form>*@

            @using (Html.BeginForm("ForzarCambioPassword", "Users", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.IDUSER)

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.IDUSER)

                    <p class="help-block text-danger">@ViewBag.Error</p>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PasswordOld, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.PasswordOld)
                        @Html.ValidationMessageFor(model => model.PasswordOld, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password1, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Password1)
                        @Html.ValidationMessageFor(model => model.Password1, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password2, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Password2)
                        @Html.ValidationMessageFor(model => model.Password2, "", new { @class = "text-danger" })
                    </div>

                    <div class="alert alert-warning password-alert" style="" role="alert">
                        <ul>
                            <li class="requirements leng"><i class="fa fa-check green-text"></i><i class="fa fa-times red-text"></i> Su contraseña debe tener al menos 6 caracteres.</li>
                            <li class="requirements big-letter"><i class="fa fa-check green-text"></i><i class="fa fa-times red-text"></i> Su contraseña debe tener al menos una letra mayúscula.</li>
                            <li class="requirements num"><i class="fa fa-check green-text"></i><i class="fa fa-times red-text"></i> Su contraseña debe tener al menos un número.</li>
                            <!--<li class="requirements special-char"><i class="fa fa-check green-text"></i><i class="fa fa-times red-text"></i> Your password must have at least 1 special char.</li>-->
                        </ul>
                    </div>
                </div>

                <div class="form-group">
                    <input id="btnSubmit" type="submit" value="Cambiar Contraseña" class="btn btn-primary btn-block" />
                </div>

            }

        </div>
    </div>

    <!-- Mainly scripts -->
    <script src="~/js/jquery-2.1.1.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/plugins/validate/jquery.validate.min.js"></script>
    <script src="@RadioWeb.Helpers.UrlExtender.ContentLastWrite(@Url, "~/js/custom/passwordValidator.js")"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#PasswordOld").focus();
            $("#PasswordOld").val("");
            $("#Password1").val("");
            $("#Password2").val("");

            $('.collapse').addClass('hidden');
            $('.extra').addClass('hidden');
            $('.footer').addClass('hidden');
        });




    </script>
</body>

</html>
