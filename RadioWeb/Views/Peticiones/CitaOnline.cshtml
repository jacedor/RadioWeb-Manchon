@model RadioWeb.Models.BOLSA_PRUEBAS

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPeticiones.cshtml";
    USUARIO usuario = RadioWeb.Models.Repos.UsuariosRepositorio.Obtener(User.Identity.Name);
}
@section  Estilos{
    <link href="~/css/styleCitaOnline.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.0-2/css/all.min.css" rel="stylesheet" />

    <link href="~/css/plugins/ladda/ladda-themeless.min.css" rel="stylesheet" />
    <style type="text/css">

        .no-huecos-message {
            text-align: center;
            font-size: 18px;
            text-transform: uppercase;
            margin: 20px 0;
        }

            .no-huecos-message p {
                margin: 10px 0;
            }

            .no-huecos-message i {
                font-size: 50px;
                color: #ff0000; /* Puedes cambiar el color según tu preferencia */
                margin-bottom: 10px;
            }
        /* Estilo para mensajes de error */
        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 5px;
        }

        /* Estilo para resaltar campos con errores */
        .error {
            color: red !important;
            font-weight: bold;
        }

        /* Estilo para el hueco seleccionado */
        #selectedSlotInfo {
            display: none;
            font-size: 1.5em;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            margin-top: 10px;
            text-align: center;
            position: relative;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

            #selectedSlotInfo .calendar-icon {
                margin-right: 10px;
            }

            #selectedSlotInfo .close-icon {
                left: 10px;
            }

                #selectedSlotInfo .close-icon:hover {
                    cursor: pointer;
                }
    </style>


}
@section barraTop{
    <div class="row border-bottom white-bg">
        <nav class="navbar navbar-expand-lg" role="navigation">
            <!--</div>-->
            <div class="text-center" id="navbar">
                <ul class="nav navbar-nav mr-auto">
                    <li class="active">
                        <a aria-expanded="false" role="button">
                            <h3></h3>
                        </a>
                    </li>
                    @if (usuario.CREARPETICIONES == "T")
                    {

                        <li >
                            <a href="/Peticiones/Create"> Nueva Petici&oacute;n</a>

                        </li>
                        <li>
                            <a href="/Peticiones/List"> Lista Peticiones</a>

                        </li>
                    }
                    <li class="">
                        <a href="/Peticiones/ListExploraciones"> Lista Exploraciones</a>

                        @* <a aria-expanded="false" role="button" href="#" class="dropdown-toggle" data-toggle="dropdown"> Lista Exploraciones</a>*@

                    </li>
                    @if (usuario.CITACIONONLINE == "T")
                    {
                        <li class="active">
                            <a href="/Peticiones/CitaOnline">Citación Directa</a>

                        </li>
                    }


                </ul>
                <ul class="nav navbar-right">
                    <li>

                        <input type="hidden" id="UserLogged" data-oidPersonal="@usuario.PERSONAL.OID" data-login="@usuario.LOGIN" data-perfil="@usuario.DESCPERFILWEB" />

                        Bienvenido @usuario.LOGIN
                        <a href="/Users/LogOut" style="min-height:5px;padding:0px;">  <i class="fa fa-sign-out"></i> Salir</a>

                        @if (usuario.IOR_ENTIDADPAGADORA.HasValue && usuario.IOR_ENTIDADPAGADORA.Value > 0)
                        {
                            <p><b>Mutua: @Model.PETICIONESANOMBREDEMUTUA</b></p>
                        }
                        @if (usuario.IOR_COLEGIADO.HasValue && usuario.IOR_COLEGIADO.Value > 0)
                        {
                            <p>Referidor: @Model.PETICIONESANOMBREDECOLEGIADO</p>
                        }
                        @if (usuario.IOR_CENTROEXTERNO.HasValue && usuario.IOR_CENTROEXTERNO.Value > 0)
                        {
                            <p>Centro Externo: @Model.PETICIONESANOMBREDECENTROEXTERNO</p>
                        }

                    </li>
                </ul>
            </div>
        </nav>
    </div>
}

<div class="modal fade" id="resumenCita">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                <h4 class="modal-title custom_align" id="Heading">Cita Creada Correctamente</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="citaCreadaOid" name="citaCreadaOid" />
                <table id="tblCitaCreada" class="table table-hover clicable">
                    <thead>
                        <tr class="warning">
                            <th>Fecha</th>
                            <th>Hora</th>
                            <th>Exploración</th>
                            <th>Aparato</th>
                            <th>Imprimir</th>

                        </tr>
                    </thead>
                    <tbody class="tablebody">
                        <tr class="ACTIVA">
                            <td><b><span id="fechaCitaCreada"></span></b></td>
                            <td><span id="horaCitaCreada"></span></td>
                            <td><span id="aparatoCitaCreada"></span></td>
                            <td><span id="exploracionCitaCreada"></span></td>

                            <td>
                                <button type="button" id="btnImprimir" class="btn btn-sm btn-white" data-toggle="tooltip" data-placement="top" title="Imprimir">
                                    <i class="fa fa-print" title="Imprimir"></i>
                                </button>
                            </td>
                        </tr>
                    </tbody>
                </table>

            </div>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<div id="collapseFiltros" class="panel-collapse collapse in">
    @using (Ajax.BeginForm("BuscarHuecos",
    "Peticiones",
    new AjaxOptions
    {
        HttpMethod = "POST",
        OnBegin = "BeginFiltros",
        OnComplete = "CompleteFiltros()",
        UpdateTargetId = "ListaHuecos",
        InsertionMode = InsertionMode.Replace

    }))

    {
        @Html.HiddenFor(model => model.IOR_CENTROEXTERNO)
        <div class="panel-body">

            <div class="form-group">
                <div class="col-sm-2 col-md-2">
                    @{
                        var classeFechaPicker = "fecha-picker";
                        if (ViewData["fechaPicker"] != null)
                        {
                            classeFechaPicker = ViewData["fechaPicker"].ToString();
                        }
                    }

                    @Html.BootstrapLabelFor(m => m.FECHAPRUEBA)
                    @Html.EditorFor(model => model.FECHAPRUEBA, new
                    {
                    htmlAttributes = new { autocomplete = "off", @class = classeFechaPicker, onkeydown = "return false" }
                    })

                </div>

                <div class="col-sm-2 col-md-2">

                    @Html.BootstrapLabelFor(m => m.HORAINICIOBUSQUEDA)
                    @Html.EditorFor(model => model.HORAINICIOBUSQUEDA, new
                    {
                    htmlAttributes = new { @class = "hora-mask" }
                    })

                </div>
                <div class="col-sm-2 col-md-2">
                    @Html.BootstrapLabelFor(m => m.IOR_ENTIDADPAGADORA)


                    @Html.EditorFor(model => model.IOR_ENTIDADPAGADORA, new
                    {
                    htmlAttributes = new { data_filter_calendar = "true" }
                    })
                    @Html.ValidationMessageFor(model => model.IOR_ENTIDADPAGADORA, "", new { @class = "text-danger" })
                </div>


                <div class="col-sm-3 col-md-2">
                    @Html.BootstrapLabelFor(m => m.IOR_GAPARATO)
                    @{var aparatosDef = RadioWeb.Models.Repos.GAparatoRepositorio.Lista().Where(u => u.CID == 1).Select(u => new SelectListItem
                        {
                            Text = u.COD_GRUP + " - " + u.DES_GRUP,
                            Value = u.OID.ToString(),
                            Selected = u.OID == Model.IOR_GAPARATO
                        }).ToArray();
                    }


                    @Html.DropDownList("IOR_GAPARATO", aparatosDef, new { @class = "form-control select2" })


                </div>
                <div class="col-sm-3 col-md-3">
                    @Html.BootstrapLabelFor(m => m.IOR_TIPOEXPLORACION)
                    @Html.EditorFor(model => model.IOR_TIPOEXPLORACION,
                    new
                    {
                    IOR_APARATO = -1,
                    IOR_MUTUA = -1,
                    NOMENCLATOR = true
                    })
                </div>
                <div class="col-sm-1 col-md-1">
                    @Html.LabelFor(m => m.IOR_GAPARATO, new { style = "visibility:hidden;" })
                    <button id="EnviarFiltros" class="btn btn-primary btn-block" type="submit"><i class="fa fa-search"></i></button>
                </div>
            </div>
            <div class="form-group m-t p-lg instrucciones hide">
                <div class="col-sm-12 col-md-12">
                    <div id="textoInfo" class="row text-center" style="margin-top: 5px;">
                        <div class="alert alert-warning col-md-offset-2 col-md-7" role="alert">
                            <span id="textPreparatorio" style="font-weight:bold;">
                            </span>
                        </div>
                    </div>
                    <div id="selectedSlotInfo"></div>
                </div>
            </div>


        </div>
        <div id="tabs-centros" class="tabs-container" style="padding:0px 20px 0px 20px">
            @{
                List<CENTROS>
               oCentros = RadioWeb.Models.Repos.CentrosRepositorio.List().Where(p => p.CID == 1).ToList();
                int i = 0;
            }         


            <ul id="tabsCentro" class="nav nav-tabs">
                @foreach (var item in oCentros.Where(p => p.OID > 0))
                {
                    <li class="@(i==0?"active":"")" data-toggle="" role="presentation">
                        <a class="nav-link" data-toggle="tab" href="#tab-@item.NOMBRE.Replace(" ","")">
                            @item.NOMBRE
                            <span data-centro="tab-@item.NOMBRE.Replace(" " ,"")" class="counter hide label label-primary @string.Concat(item.NOMBRE.Replace(" ",""),"Counter")">0</span>
                        </a>
                    </li>
                    i = i + 1;
                }
            </ul>
        </div>
    }
</div>

<div id="Result">

</div>

<div class="ibox-content booking-schedule schedule-widget tab-content" id="ListaHuecos" style="padding:0px 20px 0px 20px;max-height:600px;overflow-y:scroll;">



</div>

<div class="ibox-content hide" id="ReservaPaciente">
    <div class="card">
        <div class="card-body">

            <!-- Checkout Form -->
            <!-- Personal Information -->
            <form id="formularioCita">
                <div class="info-widget">
                    <h4 class="card-title" style="font-size:1.125rem">Datos del Paciente <span id="fechaSeleccionada"></span></h4>
                    <div id="formularioCita">

                        <div class="row">
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label>Nombre Paciente</label>
                                    <input type="text" placeholder="Nombre" id="NombrePaciente" name="NombrePaciente" class="form-control">
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label for="Apellidos" class="control-label">Apellidos</label>
                                    <input type="text" placeholder="Apellidos" id="ApellidosPaciente" name="ApellidosPaciente" class="form-control">

                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label for="fechaNacimiento" class="control-label">Fecha Nacimiento</label>


                                    <input type="datetime" id="fechaNacimiento" name="fechaNacimiento" class="form-control fecha-mask" placeholder="Fecha Nacimiento">

                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label for="dni" class="control-label">DNI/NIE</label>
                                    <input type="text" placeholder="DNI/NIE" id="dni" name="dni" class="form-control">

                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label for="sexo" class="control-label">Sexo</label>
                                    <!--<input type="text" placeholder="Sexo" id="sexo" name="sexo" class="form-control">-->
                                    <select name="sexo" id="sexo" class="form-control">
                                        <option value="H">Hombre</option>
                                        <option value="M">Mujer</option>
                                    </select>

                                </div>
                            </div>

                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label for="email" class="control-label">Email  </label>
                                    <input type="email" placeholder="Email" id="email" name="email" class="form-control">

                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label for="TelefonoMovil" class="control-label">Teléfono movil</label>
                                    <input type="text" placeholder="Telefono movil" autocomplete="off" id="TelefonoMovil" name="TelefonoMovil" class="form-control">

                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group card-label">
                                    <label class="control-label" for="DOCUMENTO">Asociar Fichero:</label>
                                    <input type="file" style="padding:10px;" placeholder="Asociar Fichero:" autocomplete="off" name="DOCUMENTO" id="DOCUMENTO" class="form-control" />

                                    @if (Model.IOR_DOCUMENTO > 0)
                                    {
                                        <a href="#" onclick="javascript: window.open('/Imagenes/Imprimir/@Model.IOR_DOCUMENTO', 'Documento', 'width=900,height=500');">Ver archivo adjunto</a>
                                    }
                                </div>
                                @Html.ValidationMessageFor(model => model.DOCUMENTO, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-lg-offset-6 col-md-6 col-sm-12">
                                <div id="TipoDeDocumento" class="form-group card-label hide">
                                    @Html.LabelFor(model => model.IOR_TIPODOC, htmlAttributes: new { @class = "col-lg-offset-6 col-sm-2 col-form-label" })

                                    @{var tiposDeDocumento = RadioWeb.Models.Repos.RefractometrosRepositorio.Lista().Where(u => u.CID == 6)
                                                                             .Select(u => new SelectListItem
                                                                             {
                                                                                 Text = u.NOMBRE,
                                                                                 Value = u.OID.ToString(),
                                                                                 Selected = u.OID == Model.IOR_TIPODOC
                                                                             }).ToArray();
                                    }

                                    @Html.DropDownList("IOR_TIPODOC", tiposDeDocumento, new { @class = "form-control select2", autocomplete = "off" })

                                </div>
                            </div>

                            @if (Model.ColegiadosRelacionados != null)
                            {
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group card-label">
                                        <label for="IOR_COLEGIADO" class="control-label">Médico Referidor</label>

                                        <select id="IOR_COLEGIADO" name="IOR_COLEGIADO" class="form-control select2">
                                            <option value="">Seleccione una opción</option>
                                            <option value="-1">No asignado</option>
                                            @if (Model.ColegiadosRelacionados != null)
                                            {

                                                foreach (var colegiado in Model.ColegiadosRelacionados)
                                                {
                                                    <option value="@colegiado.OID">@colegiado.NOMBRE</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                   

                                </div>
                            }




                        </div>


                    </div>


                </div>
                <div class="submit-section mt-6">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="recordarDatos" name="recordarDatos">
                        <label class="form-check-label" for="recordarDatos">Recordar Datos Paciente</label>
                    </div>
                    <button id="crearCita" class="btn btn-primary submit-btn ladda-button" data-style="expand-right" disabled>Reservar Cita</button>
                </div>
            </form>
        </div>


    </div>
</div>
@section scripts
    {

    <script src="~/js/jquery.unobtrusive-ajax.js"></script>
    <script src="~/js/jquery.validate.min.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/plugins/bootstrap-table/extensions/cookie/bootstrap-table-cookie.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.0-2/js/all.min.js"></script>
    <!-- Ladda -->
    <script src="~/js/plugins/ladda/spin.min.js"></script>
    <script src="~/js/plugins/ladda/ladda.min.js"></script>
    <script src="~/js/plugins/ladda/ladda.jquery.min.js"></script>


    <script type="text/javascript">
        function MostrarTextoPreparacion(texto) {
            if (texto && texto.length > 0) {
                $(".instrucciones").removeClass('hide');

            } else {
                $(".instrucciones").addClass('hide');

            }
            $("#textPreparatorio").html(texto);
            $("#textoInfo").removeClass('hide');


        }

        function getParameterByName(name) {
            var regexS = "[\\?&]" + name + "=([^&#]*)",
                regex = new RegExp(regexS),
                results = regex.exec(window.location.search);
            if (results == null) {
                return "";
            } else {
                return decodeURIComponent(results[1].replace(/\+/g, " "));
            }
        }

        function fechaStringFormat(value) {
            if (value === null || moment(value).format("DD/MM/YYYY") === "31/12/0000") {
                return '-'
            } else {
                return moment(value).format("DD/MM/YYYY");
            }
        }


        $(document).on('click', '.timing', function () {
            var valor = $(this).data("valor");
            var fecha = $(this).data("fecha");
            var hora = $(this).data("hora");
            var aparato = $(this).data("aparato");

            $(".timing").removeClass('selected');
            $(this).addClass('selected');

            var tipoExploracionTexto = $("#IOR_TIPOEXPLORACION option:selected").text();
            $("#ListaHuecos").hide();
            $("#tabs-centros").hide();
            
            // Mostrar el hueco seleccionado en el header
            $("#selectedSlotInfo").html(' <span><i style="color:green" class="fa fa-calendar calendar-icon"></i> ' + fecha + '  ' + hora + '  ' + tipoExploracionTexto + '<i class="fa fa-times close-icon" style="color:red" id="closeSelectedSlot"></i></span>');
            $("#selectedSlotInfo").show();

            // Mostrar el formulario de reserva
            $("#ReservaPaciente").removeClass('hide');

            $("#crearCita").prop("disabled", false);
            // Mostrar la fecha seleccionada en el formulario
            $("#fechaSeleccionada").text(valor);

            // Configurar el datepicker para deshabilitar fechas pasadas
            var fechaCita = moment(fecha, "DD/MM/YYYY").toDate();
            $('#FECHARESULTADO').datepicker('setStartDate', fechaCita);
        });

        $(document).on('click', '#closeSelectedSlot', function () {
            $("#selectedSlotInfo").hide();
            $("#ListaHuecos").show();
            $("#tabs-centros").show();
            $("#ReservaPaciente").addClass('hide');
        });
        $(document).on('click', '#btnDiaSiguiente', function () {
            //setCurrentDayActions(addDays($("#fechaSelect").val(), 1));
            var fecha = moment($("#FECHAPRUEBA").val(), "DD/MM/YYYY").add('days', 1).format('DD/MM/YYYY');
            $("#FECHAPRUEBA").datepicker("setDate", fecha);
            $('#form0').trigger('submit');
            //$("#EnviarFiltros").trigger("click");
            return false;

        });

        $(document).on('click', '#btnDiaAnterior', function () {
            //setCurrentDayActions(addDays($("#fechaSelect").val(), 1));
            var fecha = moment($("#FECHAPRUEBA").val(), "DD/MM/YYYY").add('days', -1).format('DD/MM/YYYY');
            $("#FECHAPRUEBA").datepicker("setDate", fecha);
            //$("#EnviarFiltros").trigger("click");
            $('#form0').trigger('submit');
            return false;
        });

        $(document).on('click', '.timing', function () {
            $(".timing").removeClass('selected');
            $(this).addClass('selected');
            $("#ReservaPaciente").removeClass('hide');
            $("#fechaSeleccionada").html($(this).data("valor"));

        });

        $(document).on('change', '#IOR_ENTIDADPAGADORA', function () {
            $("#IOR_GAPARATO").trigger('change');


        });
        const selectDocument = document.querySelector('#DOCUMENTO');
        var readerAux;
        selectDocument.addEventListener('change', (event) => {

            file = document.getElementById("DOCUMENTO").files[0];
            if (file != null) {
                $("#TipoDeDocumento").removeClass('hide');

            } else {
                $("#TipoDeDocumento").addClass('hide');

            }
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                console.log(reader.result);
                readerAux = reader.result;

            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };

            function sleep(milliseconds) {
                const date = Date.now();
                let currentDate = null;
                do {
                    currentDate = Date.now();
                } while (currentDate - date < milliseconds);
            }
            sleep(2000);
        });

        function CompleteFiltros() {

            var l = $('#EnviarFiltros').addClass('btn-primary').ladda();
            l.ladda('stop');

            var tabActivo = $("#tabsCentro li.active a").attr('href').substring(1);
            // $(".tab-pane").removeClass('active');

            $("#tab-Tibidabo").removeClass('active');
            $("#" + tabActivo).addClass('active');

            var contadores = $(".counter");
            if (contadores.length !== 0) {

                contadores.each(function (i, row) {
                    var ContainerHuecos = $(row).data('centro');
                    var huecosEnCentro = $("#" + ContainerHuecos).find(".timing").length

                    if (huecosEnCentro > 0) {
                        $(row).text(huecosEnCentro);
                        $(row).removeClass('hide');
                    } else {
                        $(row).addClass('hide');
                    }
                    //  alert($(ContainerHuecos).find(".timing").length);

                });
            }
        }
        function BeginFiltros() {
            var l = $('#EnviarFiltros').addClass('btn-info').ladda();
            l.ladda('start');
            $("[data-view=ViewCalendario]").addClass("active");
            var Contenedor = $("#ListaHuecos");
            //Contenedor.html('');
            Contenedor.empty();

        }

        $(document).on('click', '#crearCita', function () {
            if ($("#formularioCita").valid()) {

                var exploracionesParaReserva = [];

                var numero_Autorizacion = "";


                var exploracion = {
                    //ESTADODESCRIPCION: $(".timing.selected").data('fecha').replace('/', '-').replace('/', '-'),
                    ESTADODESCRIPCION: $(".timing.selected").data('fecha'),
                    HORA: $(".timing.selected").data('hora'),
                    OWNER: 98,
                    IOR_APARATO: $(".timing.selected").data('aparato'),
                    IOR_TIPOEXPLORACION: $("#IOR_TIPOEXPLORACION").val(),
                    IOR_GRUPO: $("#IOR_GAPARATO").val(),
                    IOR_ENTIDADPAGADORA: $("#IOR_ENTIDADPAGADORA").val(),
                    IOR_COLEGIADO: $("#IOR_COLEGIADO").val(),
                    IOR_CENTROEXTERNO: $("#IOR_CENTROEXTERNO").val(),
                    NHCAP: numero_Autorizacion,
                    USERNAME: $("#UserLogged").data('login')
                };

                exploracionesParaReserva.push(exploracion);

                var SexoCheck = "H";
                if ($("#optionMujer").is(":checked")) {
                    SexoCheck = "M";
                }

                var fileInput = document.getElementById('DOCUMENTO');
                var paciente =
                {
                    Nombre: $("#NombrePaciente").val(),
                    Apellidos: $("#ApellidosPaciente").val(),
                    Dni: $("#dni").val(),
                    Sexo: $("#sexo").val(),
                    FechaNacimiento: $("#fechaNacimiento").val(),
                    Telefono: $("#TelefonoMovil").val(),
                    Email: $("#email").val(),
                    Origen: "PETICIONESONLINE",
                    IOR_MUTUA: $("#IOR_ENTIDADPAGADORA").val(),
                    Exploraciones: exploracionesParaReserva,
                    IOR_CENTROEXTERNO: -1,
                    DOCUMENTO: readerAux
                };

                if (paciente.IOR_CENTROEXTERNO === -1) {
                    paciente.IOR_CENTROEXTERNO = 1;
                }



                $.ajax({
                    url: '/API/Service',
                    type: "POST",
                    async: false,
                    data: JSON.stringify(paciente),
                    contentType: 'application/json; charset=utf-8',

                    success: function (data) {
                        //document.location.href = '/ResumenCita.html?oid=' + data.Exploraciones[0].IOR_PACIENTE;

                        $("#fechaCitaCreada").html(moment(data.Exploraciones[0].FECHA).format("DD/MM/YYYY"));
                        $("#horaCitaCreada").html(data.Exploraciones[0].HORA);
                        $("#aparatoCitaCreada").html(data.Exploraciones[0].APARATO.DES_FIL);
                        $("#exploracionCitaCreada").html(data.Exploraciones[0].DAPARATO.DES_FIL);
                        $("#exploracionCitaCreada").html(data.Exploraciones[0].DAPARATO.DES_FIL);

                        $("#citaCreadaOid").val(data.Exploraciones[0].OID);

                        $("#resumenCita").modal('show');


                        return false;
                    },
                    error: function (x, y, z) {

                    }
                });



            }
        });



        $("#formularioCita").validate({
            rules: {
                IOR_COLEGIADO: {
                    required: true
                },
                NombrePaciente: {
                    required: true,
                    minlength: 3 // Mínimo 3 caracteres
                },
                ApellidosPaciente: {
                    required: true,
                    minlength: 3
                },
                fechaNacimiento: {
                    required: true,
                    date: true, // Asegurar que es una fecha válida
                    customDateRange: true
                },
                sexo: {
                    required: true,
                    notEqualToA: true
                },
                dni: {
                    required: true,
                    minlength: 7,
                    maxlength: 12,
                    customDniValidation: true // Nueva regla personalizada
                },
                email: {
                    // required: true,
                    email: true // Asegurar que es un email válido
                },
                TelefonoMovil: {
                    required: true,
                    minlength: 9,
                    maxlength: 15
                }
            },
            messages: {
                IOR_COLEGIADO: {
                    required: "Por favor, seleccione un Médico Referidor."
                },
                NombrePaciente: {
                    required: "Por favor, ingrese el Nombre.",
                    minlength: "El nombre debe tener al menos 3 caracteres."
                },
                ApellidosPaciente: {
                    required: "Por favor, ingrese los Apellidos.",
                    minlength: "Los apellidos deben tener al menos 3 caracteres.",
                    customDateRange: "La fecha debe estar entre el 01/01/1900 y la fecha actual."
                },
                fechaNacimiento: {
                    required: "Por favor, ingrese la Fecha de Nacimiento.",
                    date: "Por favor, ingrese una fecha válida."
                },
                sexo: {
                    required: "Por favor, rellene el Sexo del Paciente."  // Agrega esta línea para hacer el campo "sexo" obligatorio
                },
                dni: {
                    required: "Por favor, ingrese el DNI/NIE.",
                    minlength: "El DNI/NIE debe tener al menos 7 caracteres.",
                    maxlength: "El DNI/NIE no debe tener más de 12 caracteres."
                },
                email: {
                    required: "Por favor, ingrese el Email.",
                    email: "Por favor, ingrese un Email válido."
                },
                TelefonoMovil: {
                    required: "Por favor, ingrese el Telefono.",
                    minlength: "El teléfono móvil debe tener al menos 9 caracteres.",
                    maxlength: "El teléfono móvil no debe tener más de 15 caracteres."
                },
            },
            errorPlacement: function (error, element) {
                // Personalizar la ubicación del mensaje de error
                error.insertAfter(element); // Insertar el mensaje después del elemento
            },
            highlight: function (element, errorClass, validClass) {
                // Agregar clase de estilo para resaltar campos con errores
                $(element).addClass(errorClass).removeClass(validClass);
            },
            unhighlight: function (element, errorClass, validClass) {
                // Revertir los cambios después de corregir el error
                $(element).removeClass(errorClass).addClass(validClass);
            },
            submitHandler: function (form) {
                // Acciones a realizar cuando el formulario es válido
                // alert("Cita reservada exitosamente.");
                // Aquí puedes enviar el formulario al servidor si es necesario
            },
            // Definir la regla personalizada


        });



        $.validator.addMethod("customDateRange", function (value, element) {
            var minDate = new Date("01/01/1900");
            var dateParts = value.split("/"); // Divide la fecha en partes
            if (dateParts.length !== 3) {
                return false; // No es una fecha válida
            }

            // Reorganiza las partes de la fecha en el formato "mm/dd/yyyy"
            var formattedDate = dateParts[1] + "/" + dateParts[0] + "/" + dateParts[2];

            var inputDate = new Date(formattedDate);

            if (!value) {
                return true; // Si el campo está vacío, considera válido. Puedes cambiar esto según tus necesidades.
            }

            if (isNaN(inputDate.getTime())) {
                return false; // No es una fecha válida
            }

            return inputDate >= minDate && inputDate <= new Date(); // Comprueba el rango
        }, "La fecha debe estar entre el 01/01/1900 y la fecha actual.");


        $.validator.addMethod("notEqualToA", function (value, element) {
            return this.optional(element) || value !== "A";
        }, "Por favor, rellene el Sexo del Paciente..");

        $.validator.addMethod("customDniValidation", function (value, element) {
            return this.optional(element) || /^[0-9a-zA-Z]+$/.test(value);
        }, "El DNI/NIE no debe contener guiones.");


        $("#resumenCita").on("hidden.bs.modal", function () {
            if ($("#recordarDatos").is(":checked")) {
                // Volver a lanzar la búsqueda de huecos
                $("#selectedSlotInfo").hide();
                $(".time-slot").show();
                $(".day-slot").show();
                $(".timing").remove();
            } else {
                // Recargar la página
                location.reload();
            }
            $("#crearCita").prop("disabled", true);
            $("#IOR_GAPARATO").change();
        });


        $(document).ready(function () {
        
     
            $('input[data-val-required]').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('id') + '"]');
                    var text = label.text();
                    if (text.length > 0) {
                        label.append('<span style="color:red"> *</span>');
                    }
                }
            });

            $(".select2").select2({
                width: '100%',
                theme: "bootstrap"
            }
            );

            $('#IOR_TIPOEXPLORACION').empty();

            $('#IOR_TIPOEXPLORACION').change(function (data) {
                MostrarTextoPreparacion($('#IOR_TIPOEXPLORACION  option:selected').attr('data-texto'));

            });
            $('#IOR_GAPARATO').change(function () {
                $.ajax({
                    type: 'POST',
                    url: '/Peticiones/GetAparatosPorGrupo',
                    data: { oidGrupo: $(this).val(), mutua: $('select#IOR_ENTIDADPAGADORA').val() },
                    async: 'false',
                    beforeSend: function () {

                    },
                    success: function (data) {
                        var sel = $('#IOR_TIPOEXPLORACION');
                        $('#IOR_TIPOEXPLORACION').empty();
                        var markup = '<option value="-1"> </option>';
                        for (var x = 0; x < data.length; x++) {
                            markup += '<option data-Texto="' + data[x].TEXTO + '" value="' + data[x].OID + '">' + data[x].DES_FIL + '</option>';
                        }

                        sel.html(markup).show();
                        $('select[name=IOR_TIPOEXPLORACION]').val(-1);
                        MostrarTextoPreparacion($('#IOR_TIPOEXPLORACION  option:selected').attr('data-texto'));
                    }
                });
            });

            if ($('select#IOR_ENTIDADPAGADORA').val() > 0) {
                $('select#IOR_ENTIDADPAGADORA').addClass("disabled");
            }
            $("#IOR_GAPARATO").trigger('change');
        });
    </script>


}
